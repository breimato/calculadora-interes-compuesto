---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="es" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=Manrope:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script is:inline>
      // Inicializar el tema basado en la preferencia guardada o usar oscuro por defecto
      const getThemePreference = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return 'dark'; // Tema oscuro por defecto
      };
      
      const theme = getThemePreference();
      
      // Aplicar el tema inmediatamente para evitar parpadeo
      document.documentElement.classList.toggle('dark', theme === 'dark');
      
      // FunciÃ³n para cambiar el tema
      window.toggleTheme = () => {
        const isDark = document.documentElement.classList.contains('dark');
        const newTheme = isDark ? 'light' : 'dark';
        document.documentElement.classList.toggle('dark', newTheme === 'dark');
        localStorage.setItem('theme', newTheme);
      };
    </script>
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;
 
  @layer base {
    :root {
      --background: 0 0% 100%;
      --foreground: 222.2 84% 4.9%;
   
      --card: 0 0% 100%;
      --card-foreground: 222.2 84% 4.9%;
   
      --popover: 0 0% 100%;
      --popover-foreground: 222.2 84% 4.9%;
   
      --primary: 222.2 47.4% 11.2%;
      --primary-foreground: 210 40% 98%;
   
      --secondary: 210 40% 96.1%;
      --secondary-foreground: 222.2 47.4% 11.2%;
   
      --muted: 210 40% 96.1%;
      --muted-foreground: 215.4 16.3% 46.9%;
   
      --accent: 210 40% 96.1%;
      --accent-foreground: 222.2 47.4% 11.2%;
   
      --destructive: 0 84.2% 60.2%;
      --destructive-foreground: 210 40% 98%;

      --border: 214.3 31.8% 91.4%;
      --input: 214.3 31.8% 91.4%;
      --ring: 222.2 84% 4.9%;
   
      --radius: 0.5rem;
    }
   
    .dark {
      --background: 222.2 84% 4.9%;
      --foreground: 210 40% 98%;
   
      --card: 222.2 84% 4.9%;
      --card-foreground: 210 40% 98%;
   
      --popover: 222.2 84% 4.9%;
      --popover-foreground: 210 40% 98%;
   
      --primary: 210 40% 98%;
      --primary-foreground: 222.2 47.4% 11.2%;
   
      --secondary: 217.2 32.6% 17.5%;
      --secondary-foreground: 210 40% 98%;
   
      --muted: 217.2 32.6% 17.5%;
      --muted-foreground: 215 20.2% 65.1%;
   
      --accent: 217.2 32.6% 17.5%;
      --accent-foreground: 210 40% 98%;
   
      --destructive: 0 62.8% 30.6%;
      --destructive-foreground: 210 40% 98%;
   
      --border: 217.2 32.6% 17.5%;
      --input: 217.2 32.6% 17.5%;
      --ring: 212.7 26.8% 83.9%;
    }
  }
   
  @layer base {
    * {
      @apply border-border;
    }
    body {
      @apply bg-background text-foreground;
      font-family: 'Inter', sans-serif;
    }
    h1, h2, h3, h4, h5, h6 {
      font-family: 'Manrope', sans-serif;
      @apply font-semibold tracking-tight;
    }
  }
  
  /* Estilos para tarjetas con efecto de vidrio se manejan ahora con clases de Tailwind */
  
  /* Estilos para el toggle switch */
  input:checked + .slider {
    background-color: #4c51bf;
  }
  
  input:checked + .slider:before {
    transform: translateX(16px);
  }
</style>

